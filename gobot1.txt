Railway Deployment iÃ§in:
Railway projesinde Deploy from GitHub seÃ§eneÄŸini kullanÄ±n
Container registry'i GHCR olarak ayarlayÄ±n
Environment variables'larÄ± Railway dashboard'dan ekleyin
Bu dÃ¼zenlemelerden sonra Python tabanlÄ± Telegram botunuz GHCR Ã¼zerinden Railway'a deploy edilebilir.


#============================================
docker yapÄ± iÃ§in 3 dosya ZORUNLU
#============================================

.dockerignore
__pycache__
*.pyc
*.pyo
*.pyd
.Python
env/
venv/
.venv/
.env
.env.local
.env.production
.git
.gitignore
README.md
Dockerfile
.dockerignore
.idea
.vscode

#========================================================
Dockerfile

FROM python:3.11-slim AS builder

WORKDIR /app

#Python iÃ§in
# BaÄŸÄ±mlÄ±lÄ±klarÄ± ayrÄ± kopyala (cache iÃ§in)// 
COPY requirements.txt .
RUN pip install --user -r requirements.txt

FROM python:3.11-slim AS runtime

WORKDIR /app

# Non-root user oluÅŸtur
RUN addgroup --system --gid 1001 appgroup && \
    adduser --system --uid 1001 appuser

# Builder stage'den Python paketlerini kopyala
COPY --from=builder --chown=appuser:appgroup /root/.local /home/appuser/.local
COPY --chown=appuser:appgroup . .

# PATH'e user Python paketlerini ekle
ENV PATH="/home/appuser/.local/bin:${PATH}"

# Port bilgisi (gerekiyorsa)
EXPOSE 3000

# Health check (botunuza uygun ÅŸekilde dÃ¼zenleyin)
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD python -c "import requests; requests.get('http://localhost:3000/health', timeout=2)" || exit 1

# Non-root user ile Ã§alÄ±ÅŸtÄ±r
USER appuser

# Container baÅŸlatÄ±ldÄ±ÄŸÄ±nda Ã§alÄ±ÅŸacak komut
CMD ["python", "bot.py"]



#========================================================
.github/workflows/docker-deploy.yml

# .github/workflows/docker-deploy.yml
# ðŸš€ otomotik > Workflow: Docker Build & Deploy to Railway (dinamik repo adÄ±)
# AmaÃ§: main push â†’ latest + commit SHA, vX.Y.Z tag push â†’ versioned image, tÃ¼m deploy otomatik
# Secrets: GHCR_PAT, RAILWAY_DEPLOY_HOOK
# .github/workflows/docker-deploy.yml
name: Docker Build & Deploy to Railway

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha,prefix=,format=short

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Verify deployment hook
        run: |
          if [ -z "${{ secrets.RAILWAY_DEPLOY_HOOK }}" ]; then
            echo "Railway deploy hook not set"
            exit 1
          fi

      - name: Trigger Railway Deploy
        run: |
          curl -X POST \
            -H "Content-Type: application/json" \
            -w "HTTP Status: %{http_code}" \
            --retry 3 \
            --retry-delay 5 \
            ${{ secrets.RAILWAY_DEPLOY_HOOK }}
